- name: Create Couchbase Namespace
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'namespaces.yaml.j2') }}"

- name: Create Installation State Config Mapping
  shell: |
    INSTALLATION_CM_PRESENT=$(oc -n couchbase get cm cm-installation-state -o name)

    if [ -z "$INSTALLATION_CM_PRESENT" ];
    then
      echo "Creating installation state config mapping"
      oc -n couchbase apply -f {{ role_path }}/templates/cm-installation-state.yaml
    else
      echo "installation state config mapping already exists"
    fi
  register: cm_installation_state_result

- debug: msg="{{ cm_installation_state_result.stdout }}"

- name: Install Couchbase Operator
  shell: |
    INSTALLATION_OPERATOR_PRESENT=$(oc -n couchbase get pods --selector app=couchbase-operator -o name)

    if [ -z "$INSTALLATION_OPERATOR_PRESENT"];
    then

      echo "Creating Couchbase Operator"
      oc -n couchbase apply -f {{ role_path}}/templates/subs-couchbase.yaml.j2
      sleep 30
    else
      echo "Couchbase Operator already installed"
    fi
  register: couchbase_operator_result

- debug: msg="{{ couchbase_operator_result.stdout }}"

- name: Wait for Couchbase CRD to exist
  kubernetes.core.k8s_info:
    api_version: "apiextensions.k8s.io/v1"
    kind: CustomResourceDefinition
    name: "{{ item }}"
  loop: "{{ couchbase_expected_crds }}"
  register: crds
  until: crds.resources|length > 0
  retries: 10
  delay: 30

- name: Wait for Couchbase Operator to be available
  shell: |
    oc -n couchbase wait --for=condition=Ready pods --timeout=360s --selector app=couchbase-operator

- name: Register Output Path Directory
  stat:
    path: "{{ role_path }}/files/out"
  register: output_dir

- name: Create Output directory
  file:
    path: "{{ role_path }}/files/out"
    state: directory
  when: not output_dir.stat.exists 

- name: Install Couchbase Instance
  shell: |
    INSTALLATION_CLUSTER_PRESENT=$(oc -n couchbase get pods --selector app=couchbase -o name)

    if [ -z "$INSTALLATION_CLUSTER_PRESENT"];
    then
      echo "Creating Couchbase Cluster"
      oc -n couchbase apply -f {{ role_path}}/templates/couchbase.yaml.j2
      sleep 180

    else
      echo "Couchbase cluster already created"
    fi
  register: couchbase_cluster_result

- debug: msg="{{ couchbase_cluster_result.stdout }}"

- name: Wait for Couchbase pods
  shell: |
    oc -n couchbase wait --for=condition=Ready pods --timeout=360s --selector app=couchbase

- name: Create Route, Bucket, Secret, User, Group, Role-Binding
  shell: |
    INSTALLATION_ROUTE_PRESENT=$(oc -n couchbase get route --selector app=couchbase -o name)

    if [ -z "$INSTALLATION_ROUTE_PRESENT"];
    then
      echo "Creating Route, Bucket, Secret, User, Group, Role-Binding"
      oc -n couchbase apply -f {{ role_path}}/templates/couchbase-ext.yaml.j2
      sleep 30
    else
      echo "Couchbase route already created. Assuming bucket, secret, user, group and role-binding also created."
    fi
  register: couchbase_route_result

- debug: msg="{{ couchbase_route_result.stdout }}"


